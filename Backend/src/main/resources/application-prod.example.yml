# application.yml
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  data:
    mongodb:
      uri: mongodb://localhost:27017
      database: dev_database
      auto-index-creation: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: dev@example.com
    password: dev_password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.backend: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG

spring.security:
  jwt:
    secret: dev_jwt_secret_key_example_12345
    expiration: 3600000  # 1 hour in milliseconds
    refresh-token:
      expiration: 86400000  # 24 hours in milliseconds

security:
  cors:
    allowed-origins: http://localhost:3000
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type
    exposed-headers: Authorization
    allow-credentials: true

google:
  maps:
    api:
      key: dev_google_maps_api_key

app:
  frontend:
    url: http://localhost:3000

sendgrid:
  api:
    key: dev_sendgrid_key

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://your-prod-mongodb-uri:27017}
      database: ${MONGODB_DATABASE:your_prod_database_name}
      auto-index-creation: true
  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your_prod_email@example.com}
    password: ${MAIL_PASSWORD:your_prod_email_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} %-5level - %msg%n"
  level:
    root: WARN
    com.backend: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN

spring.security:
  jwt:
    secret: ${JWT_SECRET:your_production_jwt_secret_key}
    expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds
    refresh-token:
      expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days in milliseconds

security:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://your-frontend-domain.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type
    exposed-headers: Authorization
    allow-credentials: true

google:
  maps:
    api:
      key: ${GOOGLE_MAPS_API_KEY:your_google_maps_api_key}

app:
  frontend:
    url: ${FRONTEND_URL:https://your-frontend-domain.com}

sendgrid:
  api:
    key: ${SENDGRID_API_KEY}

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  data:
    mongodb:
      uri: mongodb://localhost:27017
      database: test_database
      auto-index-creation: true
  mail:
    host: localhost
    port: 3025  # Typically used for GreenMail in tests
    username: test@example.com
    password: test_password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} %-5level - %msg%n"
  level:
    root: ERROR
    com.backend: DEBUG
    org.springframework.security: ERROR
    org.springframework.web: ERROR

spring.security:
  jwt:
    secret: test_jwt_secret_key_example_12345
    expiration: 3600000  # 1 hour in milliseconds
    refresh-token:
      expiration: 86400000  # 24 hours in milliseconds

security:
  cors:
    allowed-origins: http://localhost:3000
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type
    exposed-headers: Authorization
    allow-credentials: true

google:
  maps:
    api:
      key: test_google_maps_api_key

app:
  frontend:
    url: http://localhost:3000

sendgrid:
  api:
    key: test_sendgrid_key