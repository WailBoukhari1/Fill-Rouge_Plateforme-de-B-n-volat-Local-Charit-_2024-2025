{
	"info": {
		"_postman_id": "volunteer-platform-api",
		"name": "Volunteer Platform API",
		"description": "API collection for the Volunteer Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "organizationId",
			"value": "",
			"type": "string"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global Pre-request Script",
					"// You can add global setup here if needed"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global Test Script",
					"pm.test(\"Response time is acceptable\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(3000);",
					"});",
					"",
					"pm.test(\"Status code is not server error\", function () {",
					"    pm.expect(pm.response.code).to.be.below(500);",
					"});"
				]
			}
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has authentication token\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.exist;",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"});",
									"",
									"pm.test(\"Response has user details\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.user).to.exist;",
									"    pm.expect(jsonData.user.id).to.exist;",
									"    pm.environment.set(\"userId\", jsonData.user.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "login"]
						}
					}
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user details\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.email).to.exist;",
									"    pm.expect(jsonData.firstName).to.exist;",
									"    pm.expect(jsonData.lastName).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"role\": \"VOLUNTEER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "register"]
						}
					}
				},
				{
					"name": "Enable 2FA",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has 2FA secret\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.secret).to.exist;",
									"    pm.expect(jsonData.qrCodeUrl).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2fa/enable",
							"host": ["{{baseUrl}}"],
							"path": ["2fa", "enable"]
						}
					}
				},
				{
					"name": "Verify 2FA",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/2fa/verify",
							"host": ["{{baseUrl}}"],
							"path": ["2fa", "verify"]
						}
					}
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Create Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Event created successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.title).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.expect(jsonData.startDate).to.exist;",
									"    pm.expect(jsonData.endDate).to.exist;",
									"    pm.environment.set(\"eventId\", jsonData.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Beach Cleanup\",\n    \"description\": \"Join us for a beach cleanup event\",\n    \"category\": \"ENVIRONMENT\",\n    \"startDate\": \"2024-03-01T09:00:00\",\n    \"endDate\": \"2024-03-01T17:00:00\",\n    \"location\": \"Miami Beach\",\n    \"coordinates\": [25.7617, -80.1918],\n    \"maxParticipants\": 50,\n    \"requirements\": [\"Bring gloves\", \"Wear comfortable shoes\"],\n    \"skills\": [\"Physical work\", \"Teamwork\"],\n    \"resources\": [\"Trash bags\", \"Water\"],\n    \"contactInfo\": {\n        \"email\": \"event@org.com\",\n        \"phone\": \"+1234567890\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/events",
							"host": ["{{baseUrl}}"],
							"path": ["events"]
						}
					}
				},
				{
					"name": "Get Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Event details are correct\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.title).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.expect(jsonData.startDate).to.exist;",
									"    pm.expect(jsonData.endDate).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/events/:eventId",
							"host": ["{{baseUrl}}"],
							"path": ["events", ":eventId"],
							"variable": [
								{
									"key": "eventId",
									"value": ""
								}
							]
						}
					}
				},
				{
					"name": "Search Events",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search results are valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"    pm.expect(jsonData.totalElements).to.exist;",
									"    pm.expect(jsonData.totalPages).to.exist;",
									"    pm.expect(jsonData.size).to.exist;",
									"    pm.expect(jsonData.number).to.exist;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Join Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Event joined successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.exist;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Leave Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Event left successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.exist;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Create Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Organization created successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.environment.set(\"organizationId\", jsonData.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Green Earth NGO\",\n    \"description\": \"Environmental conservation organization\",\n    \"mission\": \"Protect and preserve our environment\",\n    \"vision\": \"A sustainable future for all\",\n    \"website\": \"https://greenearth.org\",\n    \"phoneNumber\": \"+1234567890\",\n    \"address\": \"123 Green Street\",\n    \"city\": \"Miami\",\n    \"country\": \"USA\",\n    \"coordinates\": [25.7617, -80.1918],\n    \"focusAreas\": [\"Environment\", \"Education\"],\n    \"socialMediaLinks\": [\"https://facebook.com/greenearth\"],\n    \"registrationNumber\": \"NGO123456\",\n    \"taxId\": \"TAX123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": ["{{baseUrl}}"],
							"path": ["organizations"]
						}
					}
				},
				{
					"name": "Get Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Organization details are valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.expect(jsonData.mission).to.exist;",
									"    pm.expect(jsonData.vision).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId",
							"host": ["{{baseUrl}}"],
							"path": ["organizations", ":organizationId"],
							"variable": [
								{
									"key": "organizationId",
									"value": ""
								}
							]
						}
					}
				},
				{
					"name": "Search Organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search results are valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"    pm.expect(jsonData.totalElements).to.exist;",
									"    pm.expect(jsonData.totalPages).to.exist;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Volunteer Profiles",
			"item": [
				{
					"name": "Create Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Profile created successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.bio).to.exist;",
									"    pm.expect(jsonData.skills).to.be.an('array');",
									"    pm.expect(jsonData.interests).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bio\": \"Passionate about helping others\",\n    \"skills\": [\"Teaching\", \"First Aid\"],\n    \"interests\": [\"Education\", \"Healthcare\"],\n    \"availability\": [\"WEEKENDS\", \"EVENINGS\"],\n    \"preferredLocations\": [\"Miami\", \"Fort Lauderdale\"],\n    \"languages\": [\"English\", \"Spanish\"],\n    \"education\": \"Bachelor's in Social Work\",\n    \"certifications\": [\"First Aid Certified\"],\n    \"experience\": \"2 years volunteering experience\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/volunteer-profiles",
							"host": ["{{baseUrl}}"],
							"path": ["volunteer-profiles"]
						}
					}
				},
				{
					"name": "Get Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Profile details are valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.bio).to.exist;",
									"    pm.expect(jsonData.skills).to.be.an('array');",
									"    pm.expect(jsonData.interests).to.be.an('array');",
									"    pm.expect(jsonData.availability).to.be.an('array');",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Send Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Message sent successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.content).to.exist;",
									"    pm.expect(jsonData.senderId).to.exist;",
									"    pm.expect(jsonData.recipientId).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipientId\": \"user123\",\n    \"content\": \"Hello! I'm interested in your event.\",\n    \"type\": \"DIRECT\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": ["{{baseUrl}}"],
							"path": ["messages"]
						}
					}
				},
				{
					"name": "Get Messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Messages list is valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"    pm.expect(jsonData.totalElements).to.exist;",
									"    pm.expect(jsonData.totalPages).to.exist;",
									"    pm.expect(jsonData.size).to.exist;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notifications list is valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"    pm.expect(jsonData.totalElements).to.exist;",
									"    pm.expect(jsonData.totalPages).to.exist;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Mark Notification as Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notification marked as read\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.exist;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Skills",
			"item": [
				{
					"name": "Get All Skills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Skills list is valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0].id).to.exist;",
									"        pm.expect(jsonData[0].name).to.exist;",
									"        pm.expect(jsonData[0].category).to.exist;",
									"    }",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Add Skill",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Project Management\",\n    \"category\": \"MANAGEMENT\",\n    \"description\": \"Ability to plan and execute projects\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/skills",
							"host": ["{{baseUrl}}"],
							"path": ["skills"]
						}
					}
				}
			]
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "Upload Resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Resource uploaded successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.url).to.exist;",
									"    pm.expect(jsonData.type).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "type",
									"value": "EVENT_PHOTO",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Event photo description",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/resources",
							"host": ["{{baseUrl}}"],
							"path": ["resources"]
						}
					}
				},
				{
					"name": "Get Resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resource details are valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.url).to.exist;",
									"    pm.expect(jsonData.type).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Achievements",
			"item": [
				{
					"name": "Get User Achievements",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/achievements",
							"host": ["{{baseUrl}}"],
							"path": ["achievements"]
						}
					}
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Generate Event Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Report generated successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.eventId).to.exist;",
									"    pm.expect(jsonData.statistics).to.exist;",
									"    pm.expect(jsonData.participantCount).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reports/events/:eventId",
							"host": ["{{baseUrl}}"],
							"path": ["reports", "events", ":eventId"],
							"variable": [
								{
									"key": "eventId",
									"value": ""
								}
							]
						}
					}
				},
				{
					"name": "Generate Organization Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Organization report is valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.organizationId).to.exist;",
									"    pm.expect(jsonData.statistics).to.exist;",
									"    pm.expect(jsonData.eventCount).to.exist;",
									"    pm.expect(jsonData.volunteerCount).to.exist;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Statistics",
			"item": [
				{
					"name": "Get Event Statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Event statistics are valid\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalEvents).to.exist;",
									"    pm.expect(jsonData.activeEvents).to.exist;",
									"    pm.expect(jsonData.completedEvents).to.exist;",
									"    pm.expect(jsonData.totalParticipants).to.exist;",
									"    pm.expect(jsonData.categoriesDistribution).to.be.an('object');",
									"});"
								]
							}
						}
					]
				}
			]
		}
	]
} 